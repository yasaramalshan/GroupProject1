package Admin;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import Utility.Extra;
import groupproject.DBOperations;
import java.awt.Button;
import java.awt.Color;
import java.sql.ResultSet;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.border.BevelBorder;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yasara JLP
 */
public class Edit_Details_admin extends javax.swing.JFrame {

    ResultSet rs, applications, applicants;
    DefaultTableModel table;
    JFrame parent;
    private int xMouse, yMouse;

    public Edit_Details_admin(JFrame parent) {
        initComponents();
        table = (DefaultTableModel) tblResultsEmployee.getModel();
        this.parent = parent;

        tableRenderer(tblResultsEmployee);
        tableRenderer(tblResultsApplicant);
        tableRenderer(tblResultsApplication);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panMain = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblExit = new javax.swing.JLabel();
        lblMinimize = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtField = new javax.swing.JTextField();
        btnSearch = new java.awt.Button();
        jLabel10 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        cmbSearchMethod = new javax.swing.JComboBox<>();
        cmbSearch = new javax.swing.JComboBox<>();
        panCard = new javax.swing.JPanel();
        pan_employee = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultsEmployee = new javax.swing.JTable();
        pan_applicant = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultsApplicant = new javax.swing.JTable();
        pan_application = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblResultsApplication = new javax.swing.JTable();
        btnEdit = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(750, 372));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        panMain.setBackground(new java.awt.Color(255, 255, 255));
        panMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(49, 58, 115), 2));
        panMain.setPreferredSize(new java.awt.Dimension(640, 372));
        panMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panMainMouseDragged(evt);
            }
        });
        panMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panMainMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                panMainMouseReleased(evt);
            }
        });
        panMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(49, 58, 115));

        jLabel1.setBackground(new java.awt.Color(49, 58, 115));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        panMain.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 23, 730, -1));

        lblExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblExit.setForeground(new java.awt.Color(255, 0, 0));
        lblExit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExit.setText("X");
        lblExit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
        });
        panMain.add(lblExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 0, 20, 20));

        lblMinimize.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblMinimize.setForeground(new java.awt.Color(54, 33, 89));
        lblMinimize.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMinimize.setText("-");
        lblMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMinimizeMouseClicked(evt);
            }
        });
        panMain.add(lblMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 0, 20, 20));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("By");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 20, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText(":");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 20, 20));

        txtField.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jPanel1.add(txtField, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 180, -1));

        btnSearch.setActionCommand("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSearch.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        btnSearch.setLabel("Search");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchMouseExited(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel1.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 78, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Input");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 60, 20));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText(":");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 20, 20));

        cmbSearchMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NIC", "Initial Name", "Last Name", "UserID" }));
        cmbSearchMethod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchMethodActionPerformed(evt);
            }
        });
        jPanel1.add(cmbSearchMethod, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 20, 140, 20));

        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Employee", "Applicant", "Application" }));
        cmbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchActionPerformed(evt);
            }
        });
        jPanel1.add(cmbSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 140, 20));

        panCard.setLayout(new java.awt.CardLayout());

        tblResultsEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Initial Name", "Last Name", "NIC", "Designation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResultsEmployee);

        javax.swing.GroupLayout pan_employeeLayout = new javax.swing.GroupLayout(pan_employee);
        pan_employee.setLayout(pan_employeeLayout);
        pan_employeeLayout.setHorizontalGroup(
            pan_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
            .addGroup(pan_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
        );
        pan_employeeLayout.setVerticalGroup(
            pan_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(pan_employeeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_employeeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panCard.add(pan_employee, "card2");

        tblResultsApplicant.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Initial Name", "Last Name", "NIC", "Contact No.", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblResultsApplicant);

        javax.swing.GroupLayout pan_applicantLayout = new javax.swing.GroupLayout(pan_applicant);
        pan_applicant.setLayout(pan_applicantLayout);
        pan_applicantLayout.setHorizontalGroup(
            pan_applicantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
            .addGroup(pan_applicantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
        );
        pan_applicantLayout.setVerticalGroup(
            pan_applicantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(pan_applicantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pan_applicantLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        panCard.add(pan_applicant, "card3");

        tblResultsApplication.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Application ID", "Address", "Owner's Initial Name", "Owner's Last Name", "Owner's NIC"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblResultsApplication);

        javax.swing.GroupLayout pan_applicationLayout = new javax.swing.GroupLayout(pan_application);
        pan_application.setLayout(pan_applicationLayout);
        pan_applicationLayout.setHorizontalGroup(
            pan_applicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 710, Short.MAX_VALUE)
            .addGroup(pan_applicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE))
        );
        pan_applicationLayout.setVerticalGroup(
            pan_applicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
            .addGroup(pan_applicationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
        );

        panCard.add(pan_application, "card4");

        jPanel1.add(panCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 710, 220));

        panMain.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 55, 730, 282));

        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnEdit.setEnabled(false);
        btnEdit.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        btnEdit.setLabel("Edit");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEditMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEditMouseExited(evt);
            }
        });
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        panMain.add(btnEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(662, 340, 80, -1));

        getContentPane().add(panMain, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked

        int dialogResult = JOptionPane.showConfirmDialog(this, "Would You Like to Cancel...?", "Warning", JOptionPane.YES_NO_OPTION, 0, new ImageIcon(getClass().getResource("Images/message_confirm.png")));
        if (dialogResult == JOptionPane.YES_OPTION) {
            this.dispose();
            parent.setState(0);
        }

    }//GEN-LAST:event_lblExitMouseClicked

    private void tableRenderer(JTable tbl) {
        // for set table header background
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        //headerRenderer.setBackground(new Color(240, 240, 240)); // change background colour
        headerRenderer.setHorizontalAlignment(JLabel.CENTER); // change alignment of column captions

        for (int i = 0; i < tbl.getModel().getColumnCount(); i++) {
            tbl.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }

        tbl.getTableHeader().setBorder(new BevelBorder(0, Color.WHITE, Color.lightGray));
        // to set column allignments to center
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER); // change alignment of column values
        tbl.setDefaultRenderer(String.class, centerRenderer);
        tbl.setShowGrid(true);//to show grid in table
        tbl.setShowHorizontalLines(false);//hide horizontal lines from grid
    }

    private void lblMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMinimizeMouseClicked
        this.setState(1);
    }//GEN-LAST:event_lblMinimizeMouseClicked

    private void panMainMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panMainMousePressed
        setOpacity((float) 0.8);
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_panMainMousePressed

    private void panMainMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panMainMouseDragged
        int x = evt.getXOnScreen(), y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_panMainMouseDragged

    private void panMainMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panMainMouseReleased
        setOpacity((float) 1);
    }//GEN-LAST:event_panMainMouseReleased

    private void btnSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseEntered
        setButtonColour(btnSearch);
    }//GEN-LAST:event_btnSearchMouseEntered

    private void btnSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseExited
        resetButtonColour(btnSearch);
    }//GEN-LAST:event_btnSearchMouseExited

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String text = txtField.getText().trim(); // trim() used for remove Leading & trailing spaces.
        table.getDataVector().removeAllElements();
        table.fireTableDataChanged();

        if (cmbSearch.getSelectedIndex() == 0) { // employee search
            switch (cmbSearchMethod.getSelectedIndex()) {

                case 0: // by nic
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "NIC can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isValidNIC(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid NIC..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 0);
                    }
                    break;
                case 1: // by initial name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Initial Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 1);
                    }
                    break;
                case 2: // by last name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Last Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 2);
                    }
                    break;

                case 3: // by user ID
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "User ID can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 3);
                    }
                    break;

            }
        } else if (cmbSearch.getSelectedIndex() == 1) { // applicant search
            switch (cmbSearchMethod.getSelectedIndex()) {

                case 0: // by nic
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "NIC can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isValidNIC(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid NIC..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 0);
                    }
                    break;
                case 1: // by initial name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Initial Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 1);
                    }
                    break;
                case 2: // by last name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Last Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 2);
                    }
                    break;

            }
        } else { // application search
            switch (cmbSearchMethod.getSelectedIndex()) {

                case 0: // by application ID search
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "ApplicationID can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isValidApplcationID(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid ApplicationID..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 0);
                    }
                    break;
                case 1: // by Owner's NIC search
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Owner's NIC can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isValidNIC(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid NIC..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 1);
                    }
                    break;
                case 2: // by owner's initial name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Owner's Initial Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isInitName(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid Initial Name..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 2);
                    }
                    break;

                case 3: // by owner's last name
                    if (text.equals("")) {
                        JOptionPane.showMessageDialog(this, "Owner's Last Name can't be Epmty..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else if (!Extra.isName_Spaces(text)) {
                        JOptionPane.showMessageDialog(this, "Invalid Last Name..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    } else {
                        generateTable(text, 3);
                    }
                    break;

            }
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEditMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseEntered
        setButtonColour(btnEdit);
    }//GEN-LAST:event_btnEditMouseEntered

    private void btnEditMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseExited
        resetButtonColour(btnEdit);
    }//GEN-LAST:event_btnEditMouseExited

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (table.getRowCount()>0) {
            if (cmbSearch.getSelectedIndex() == 0 && !tblResultsEmployee.getSelectionModel().isSelectionEmpty()) { // employee
                String userID = tblResultsEmployee.getModel().getValueAt(tblResultsEmployee.getSelectedRow(), 0).toString();
                new Edit_Employee(this, userID).setVisible(true);
                this.setState(1);
            } else if(cmbSearch.getSelectedIndex() == 1 && !tblResultsApplicant.getSelectionModel().isSelectionEmpty()) { // applicant
                String applicantNIC = tblResultsApplicant.getModel().getValueAt(tblResultsApplicant.getSelectedRow(), 2).toString();
                new Edit_Applicant(this, applicantNIC).setVisible(true);
                this.setState(1);
            } else if(!tblResultsApplication.getSelectionModel().isSelectionEmpty()){ // application
                String applcationID = tblResultsApplication.getModel().getValueAt(tblResultsApplication.getSelectedRow(), 0).toString();
                new Edit_Application(this, applcationID).setVisible(true);
                this.setState(1);
            }
            
        } 
        
    }//GEN-LAST:event_btnEditActionPerformed

    private void cmbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchActionPerformed
        table.getDataVector().removeAllElements();
        table.fireTableDataChanged();
        btnEdit.setEnabled(false);
        if (cmbSearch.getSelectedIndex() == 0) { // employee
            hideTables();
            pan_employee.show();
            table = (DefaultTableModel) tblResultsEmployee.getModel();
            cmbSearchMethod.removeAllItems();
            cmbSearchMethod.addItem("NIC");
            cmbSearchMethod.addItem("Initial Name");
            cmbSearchMethod.addItem("Last Name");
            cmbSearchMethod.addItem("UserID");
        } else if (cmbSearch.getSelectedIndex() == 1) { // applicant
            hideTables();
            pan_applicant.show();
            table = (DefaultTableModel) tblResultsApplicant.getModel();
            cmbSearchMethod.removeAllItems();
            cmbSearchMethod.addItem("NIC");
            cmbSearchMethod.addItem("Initial Name");
            cmbSearchMethod.addItem("Last Name");
        } else { // application
            hideTables();
            pan_application.show();
            table = (DefaultTableModel) tblResultsApplication.getModel();
            cmbSearchMethod.removeAllItems();
            cmbSearchMethod.addItem("Application ID");
            cmbSearchMethod.addItem("Owner's  NIC");
            cmbSearchMethod.addItem("Owner's Initial Name");
            cmbSearchMethod.addItem("Owner's Last Name");
        }
    }//GEN-LAST:event_cmbSearchActionPerformed

    private void cmbSearchMethodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchMethodActionPerformed
        table.getDataVector().removeAllElements();
        table.fireTableDataChanged();
        btnEdit.setEnabled(false);
    }//GEN-LAST:event_cmbSearchMethodActionPerformed

    private void generateTable(String text, int method) {
        DBOperations dbops = new DBOperations();
        try {
            if (cmbSearch.getSelectedIndex() == 0) { // generate employee table
                rs = dbops.getEmployee(text, method);
                if (!rs.next()) {
                    btnEdit.setEnabled(false);
                    table.getDataVector().removeAllElements();
                    table.fireTableDataChanged(); // or table.setRowCount(0);
                    JOptionPane.showMessageDialog(this, "Employee Not Found..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    rs.close();
                } else {
                    btnEdit.setEnabled(true);
                    table.getDataVector().removeAllElements();
                    table.fireTableDataChanged();
                    do {
                        table.addRow(new Object[]{rs.getString("employee_id"), rs.getString("init_name"), rs.getString("last_name"), rs.getString("nic"), rs.getString("designation")});
                    } while (rs.next());
                }

            } else if (cmbSearch.getSelectedIndex() == 1) { // generate applicant table
                rs = dbops.getApplicant(text, method);
                if (!rs.next()) {
                    btnEdit.setEnabled(false);
                    table.getDataVector().removeAllElements();
                    table.fireTableDataChanged(); // or table.setRowCount(0);
                    JOptionPane.showMessageDialog(this, "Applicant Not Found,Please Register The Applicant..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                    rs.close();
                } else {
                    btnEdit.setEnabled(true);
                    table.getDataVector().removeAllElements();
                    table.fireTableDataChanged();
                    do {
                        table.addRow(new Object[]{rs.getString("init_name"), rs.getString("last_name"), rs.getString("nic"), rs.getString("phone"), rs.getString("email")});
                    } while (rs.next());
                }

            } else { // generate application table
                if (method == 0) { // search by application ID
                    applications = dbops.getApplication(text, 0);
                    try {
                        if (!applications.next()) {
                            btnEdit.setEnabled(false);
                            table.getDataVector().removeAllElements();
                            table.fireTableDataChanged(); // or table.setRowCount(0);
                            JOptionPane.showMessageDialog(this, "Application Not Found..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                            applications.close();
                        } else {
                            btnEdit.setEnabled(true);
                            table.getDataVector().removeAllElements();
                            table.fireTableDataChanged();
                            // text is the application id
                            String address = applications.getString("address"), iName, lName, nic = applications.getString("owner_nic");
                            applicants = dbops.getApplicant(nic, 0);
                            applicants.next();
                            iName = applicants.getString("init_name");
                            lName = applicants.getString("last_name");

                            table.addRow(new Object[]{text, address, iName, lName, nic});

                        }
                    } catch (Exception e) {
                        System.out.println("Exeption in generateTable method " + e);
                    }
                } else {
                    applicants = dbops.getApplicant(text, method - 1); // for dbops.getApplicant method's method :- 0,1,2

                    try {
                        if (!applicants.next()) {
                            btnEdit.setEnabled(false);
                            table.getDataVector().removeAllElements();
                            table.fireTableDataChanged(); // or table.setRowCount(0);
                            JOptionPane.showMessageDialog(this, "Owner Not Found..!", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("Images/message_error.png")));
                            applicants.close();
                        } else {
                            //btnRemove.setEnabled(true);
                            table.getDataVector().removeAllElements();
                            table.fireTableDataChanged();

                            do {
                                applications = dbops.getApplication(applicants.getString("nic").toString(), 1);//get applications using owner's nic

                                while (applications.next()) {
                                    table.addRow(new Object[]{applications.getString("application_id"), applications.getString("address"), applicants.getString("init_name"), applicants.getString("last_name"), applicants.getString("nic")});
                                }
                            } while (applicants.next());

                            if (table.getRowCount() == 0) {
                                btnEdit.setEnabled(false);
                                JOptionPane.showMessageDialog(this, "No Ralated Applications...!", "Info", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                btnEdit.setEnabled(true);
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("Exeption in generateTable method " + e);
                    }

                }
            }

        } catch (Exception e) {
            System.out.println("Exeption in generateTable method " + e);
        }
    }

    /**
     * @param args the command line arguments
     */
    private void setButtonColour(Button button) {
        button.setBackground(new Color(0, 153, 0));
        button.setForeground(new Color(255, 255, 255));

    }

    private void resetButtonColour(Button button) {
        button.setBackground(new Color(240, 240, 240));
        button.setForeground(new Color(0, 0, 0));

    }

    private void hideTables() {
        pan_employee.hide();
        pan_applicant.hide();
        pan_application.hide();
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edit_Details_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edit_Details_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edit_Details_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edit_Details_admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    UIManager.setLookAndFeel(
                            UIManager.getSystemLookAndFeelClassName());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                new Edit_Details_admin(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnEdit;
    private java.awt.Button btnSearch;
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JComboBox<String> cmbSearchMethod;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblMinimize;
    private javax.swing.JPanel panCard;
    private javax.swing.JPanel panMain;
    private javax.swing.JPanel pan_applicant;
    private javax.swing.JPanel pan_application;
    private javax.swing.JPanel pan_employee;
    private javax.swing.JTable tblResultsApplicant;
    private javax.swing.JTable tblResultsApplication;
    private javax.swing.JTable tblResultsEmployee;
    private javax.swing.JTextField txtField;
    // End of variables declaration//GEN-END:variables

}
